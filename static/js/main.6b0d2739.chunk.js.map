{"version":3,"sources":["Camera/Dialog.js","Upload/index.js","Camera/index.js","Module/index.js","App.js","serviceWorker.js","index.js"],"names":["props","openAttribute","closeFunction","matchScreen","Dialog","open","onClose","fullScreen","DialogTitle","DialogContent","DialogContentText","href","DialogActions","Button","onClick","color","autoFocus","useStyles","makeStyles","theme","uploadDiv","position","width","cursor","uploadFileInput","opacity","height","left","top","zIndex","fileRef","previewImg","classes","className","variant","ref","type","accept","onChange","selfPhoto","display","alignItem","justifyContent","border","marginBottom","bottomUpload","marginTop","alignItems","selfImgData","setSelfImgData","useState","dialogOpen","setDialogOpen","useRef","videoRef","canvasRef","useEffect","current","files","size","console","log","newImg","Image","src","style","transform","onload","getContext","drawImage","toDataURL","id","reShot","navigator","mediaDevices","getUserMedia","audio","video","then","mediaStream","srcObject","onloadedmetadata","e","play","addEventListener","shot","pause","fontSize","Upload","fileReader","FileReader","readAsDataURL","result","imgRef","uploadImgData","setUploadImgData","module","flexDirection","moduleImg","uploadImg","maxWidth","maxHeight","canvas","document","createElement","alt","root","flexGrow","paper","padding","spacing","textAlign","palette","text","secondary","resultImg","App","resultImgData","setResultImgData","api_keyRef","api_secretRef","match","useMediaQuery","Grid","container","justify","item","xs","Paper","Camera","backgroundColor","TextField","required","label","inputRef","formData","FormData","append","value","$","ajax","url","data","processData","contentType","crossDomain","success","response","error_message","alert","error","xhr","status","responseText","Module","Boolean","window","location","hostname","ReactDOM","render","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6b0d2739.chunk.js","sourcesContent":["import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nexport default function(props) {\n  const { openAttribute, closeFunction, matchScreen } = props;\n  return (\n    <Dialog\n      open={openAttribute}\n      onClose={closeFunction}\n      fullScreen={matchScreen}\n    >\n      <DialogTitle>抱歉</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          当前页面没有调用摄像头的权限,如需访问具有调用摄像头权限的页面\n          <a href=\"https://giorgiopeng.space/MergeFace\">请点击这里</a>\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={closeFunction} color=\"primary\" autoFocus>\n          知道了\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nconst useStyles = makeStyles(theme => ({\n  uploadDiv: {\n    position: \"relative\",\n    width: \"150px\",\n    cursor: \"pointer\"\n  },\n  uploadFileInput: {\n    opacity: \"0\",\n    height: \"100%\",\n    width: \"100%\",\n    position: \"absolute\",\n    left: \"0\",\n    top: \"0\",\n    zIndex: \"2\",\n    cursor: \"pointer\"\n  }\n}));\nexport default function(props) {\n  const { fileRef, previewImg } = props;\n  const classes = useStyles();\n  return (\n    <div className={classes.uploadDiv}>\n      <Button variant=\"contained\" color=\"primary\">\n        点击上传\n      </Button>\n      <input\n        ref={fileRef}\n        type=\"file\"\n        accept=\"image/*\"\n        className={classes.uploadFileInput}\n        onChange={previewImg}\n      ></input>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useRef, useEffect, useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"./Dialog\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Upload from \"../Upload\";\nconst useStyles = makeStyles(theme => ({\n  selfPhoto: {\n    display: \"flex\",\n    height: \"300px\",\n    width: \"100%\",\n    alignItem: \"center\",\n    justifyContent: \"center\",\n    border: \"1px solid grey\",\n    marginBottom: \"5px\"\n  },\n  bottomUpload: {\n    display: \"flex\",\n    width: \"100%\",\n    justifyContent: \"center\",\n    marginTop: \"5px\",\n    alignItems: \"center\"\n  }\n}));\nexport default function(props) {\n  const { matchScreen, selfImgData, setSelfImgData } = props;\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const fileRef = useRef();\n  const videoRef = useRef();\n  const canvasRef = useRef();\n  const classes = useStyles();\n  const openCamera = () => {\n    const constraints = { audio: true, video: { width: 200, height: 250 } };\n    if (navigator.mediaDevices) {\n      navigator.mediaDevices\n        .getUserMedia(constraints)\n        .then(function(mediaStream) {\n          console.log(\"getUserMedia:\", mediaStream);\n          videoRef.current.srcObject = mediaStream;\n          videoRef.current.onloadedmetadata = function(e) {\n            videoRef.current.play();\n          }; //开始录像\n          videoRef.current.addEventListener(\"timeupdate\", function() {\n            canvasRef.current\n              .getContext(\"2d\")\n              .drawImage(videoRef.current, 0, 0, 200, 250);\n          }); //实时绘图\n        });\n    } //如果打开是以localhost, file:///, 或者https协议打开,则能够打开摄像头,不需要处理错误逻辑\n    else {\n      //如果是以http协议打开,则不能调用出摄像头\n      setDialogOpen(true);\n    }\n  };\n  const takePhoto = () => {\n    console.log(videoRef.current.srcObject);\n    if (videoRef.current.srcObject !== null) {\n      videoRef.current.pause();\n      setSelfImgData(canvasRef.current.toDataURL(\"image/jpeg\"));\n      //拍照\n    }\n  };\n  const reDraw = () => {\n    if (fileRef.current.files[0] && fileRef.current.files[0].size) {\n      console.log(\"re-draw\");\n      let newImg = new Image();\n      newImg.src = selfImgData;\n      newImg.style.transform = matchScreen ? \"rotate(90deg)\" : \"\";\n      newImg.onload = () => {\n        canvasRef.current.getContext(\"2d\").drawImage(newImg, 0, 0, 200, 250);\n        setSelfImgData(\n          canvasRef.current.toDataURL(\n            \"image/jpeg\",\n            fileRef.current.files[0].size > 1900000\n              ? 1900000 / fileRef.current.files[0].size\n              : 1\n          )\n        ); //压缩图片重新赋值\n      };\n      //重绘方法\n    }\n  };\n  const previewImg = () => {\n    if (videoRef.current.srcObject !== null) {\n      videoRef.current.pause();\n    }\n    let fileReader = new FileReader();\n    fileReader.readAsDataURL(fileRef.current.files[0]);\n    fileReader.onload = () => {\n      setSelfImgData(fileReader.result);\n    };\n\n    //预览图\n  };\n  useEffect(reDraw, [selfImgData]); //重绘图\n  return (\n    <div>\n      <div className={classes.selfPhoto}>\n        <video src=\"\" style={{ display: \"none\" }} ref={videoRef}></video>\n        <canvas id=\"canvas\" width=\"200\" height=\"250\" ref={canvasRef}></canvas>\n      </div>\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        className={classes.reShot}\n        onClick={openCamera}\n      >\n        重拍/打开摄像头\n      </Button>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.shot}\n        onClick={takePhoto}\n      >\n        拍照\n      </Button>\n      <div className={classes.bottomUpload}>\n        <span style={{ fontSize: \"10px\", color: \"red\" }}>也可以上传图片哦</span>\n        <Upload fileRef={fileRef} previewImg={previewImg}></Upload>\n      </div>\n      <Dialog\n        openAttribute={dialogOpen}\n        closeFunction={() => setDialogOpen(false)}\n        matchScreen={matchScreen}\n      ></Dialog>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useRef, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Upload from \"../Upload/index.js\";\n\nexport default function(props) {\n  const fileRef = useRef();\n  const imgRef = useRef();\n  const { matchScreen, uploadImgData, setUploadImgData } = props;\n  const useStyles = makeStyles(theme => ({\n    module: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\"\n    },\n    moduleImg: {\n      display: \"flex\",\n      height: \"300px\",\n      width: \"100%\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      border: \"1px solid grey\",\n      marginBottom: \"5px\"\n    },\n    uploadFileInput: {\n      opacity: \"0\",\n      height: \"100%\",\n      width: \"100%\",\n      position: \"absolute\",\n      left: \"0\",\n      top: \"0\",\n      zIndex: \"2\",\n      cursor: \"pointer\"\n    },\n    uploadDiv: {\n      position: \"relative\",\n      width: \"150px\",\n      cursor: \"pointer\"\n    },\n    uploadImg: {\n      maxWidth: \"200px\",\n      maxHeight: \"250px\"\n    }\n  }));\n  const classes = useStyles();\n  const previewImg = () => {\n    console.log(fileRef.current.files[0]);\n    let fileReader = new FileReader();\n    fileReader.readAsDataURL(fileRef.current.files[0]);\n    fileReader.onload = () => {\n      setUploadImgData(fileReader.result);\n    };\n  };\n  const reDraw = () => {\n    if (fileRef.current.files[0] && fileRef.current.files[0].size) {\n      let canvas = document.createElement(\"canvas\");\n      canvas.width = 200;\n      canvas.height = 250;\n      canvas.getContext(\"2d\").drawImage(imgRef.current, 0, 0, 200, 250);\n      setUploadImgData(\n        canvas.toDataURL(\n          \"image/jpeg\",\n          fileRef.current.files[0].size > 1900000\n            ? 1900000 / fileRef.current.files[0].size\n            : 1\n        )\n      ); //压缩图片\n    }\n  };\n  useEffect(reDraw, [uploadImgData]);\n  return (\n    <div className={classes.module}>\n      <div className={classes.moduleImg}>\n        <img\n          className={classes.uploadImg}\n          alt=\"模板照片\"\n          src={uploadImgData}\n          ref={imgRef}\n          style={matchScreen ? { transform: \"rotate(90deg)\" } : {}}\n        ></img>\n      </div>\n      <Upload fileRef={fileRef} previewImg={previewImg}></Upload>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useState, useRef } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport $ from \"jquery\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Camera from \"./Camera\";\nimport Module from \"./Module\";\nimport \"./App.css\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 2\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary\n    // height: \"400px\"\n  },\n  resultImg: {\n    maxWidth: \"400px\"\n  }\n}));\nfunction App() {\n  const classes = useStyles();\n  const [selfImgData, setSelfImgData] = useState();\n  const [uploadImgData, setUploadImgData] = useState();\n  const [resultImgData, setResultImgData] = useState();\n  const api_keyRef = useRef();\n  const api_secretRef = useRef();\n  const match = useMediaQuery(\"(max-width:600px)\");\n  const getResultImg = () => {\n    let formData = new FormData();\n    formData.append(\"api_key\", api_keyRef.current.value);\n    formData.append(\"api_secret\", api_secretRef.current.value);\n    formData.append(\"template_base64\", uploadImgData);\n    formData.append(\"merge_base64\", selfImgData);\n    $.ajax({\n      type: \"POST\",\n      url: \"https://api-cn.faceplusplus.com/imagepp/v1/mergeface\",\n      data: formData,\n      processData: false,\n      contentType: false,\n      crossDomain: true,\n      success: function(response) {\n        if (typeof response.error_message == \"undefined\") {\n          // todo: 在这里添加生成后的逻辑，response.result 为生成图的base64编码\n          console.log(response);\n          setResultImgData(\"data:image/jpg/png;base64,\" + response.result);\n          // $('.uploadpic').attr('src', 'data:image/jpg/png;base64,' + response.result);\n        } else {\n          // todo: 在这里添加上传失败的逻辑\n          alert(\"请重新上传照片\");\n        }\n      },\n      error: function(xhr, status, error) {\n        console.log(xhr.responseText);\n        // todo: 在这里添加上传失败的逻辑\n        alert(\"请重新上传照片\");\n      }\n    });\n  };\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={1} justify=\"center\">\n        <Grid item xs={match ? 12 : 5}>\n          <Paper className={classes.paper}>\n            <Camera\n              matchScreen={match}\n              selfImgData={selfImgData}\n              setSelfImgData={setSelfImgData}\n            ></Camera>\n          </Paper>\n        </Grid>\n        <Grid item xs={match ? 12 : 2}>\n          <Paper\n            className={classes.paper}\n            style={{\n              backgroundColor: \"pink\",\n              transform: match ? \"\" : \"translateY(80px)\"\n            }}\n          >\n            <TextField\n              required\n              id=\"filled-required\"\n              label=\"api_key\"\n              inputRef={api_keyRef}\n              variant=\"filled\"\n            />\n            <TextField\n              required\n              id=\"filled-required\"\n              label=\"api_secret\"\n              inputRef={api_secretRef}\n              variant=\"filled\"\n            />\n            <Button\n              onClick={getResultImg}\n              style={{\n                width: \"100%\",\n                height: \"100%\",\n                fontSize: \"20px\",\n                marginTop: \"10px\"\n              }}\n            >\n              +\n            </Button>\n          </Paper>\n        </Grid>\n        <Grid item xs={match ? 12 : 5}>\n          <Paper className={classes.paper}>\n            <Module\n              matchScreen={match}\n              uploadImgData={uploadImgData}\n              setUploadImgData={setUploadImgData}\n            ></Module>\n          </Paper>\n        </Grid>\n        <Grid item xs={match ? 12 : 10}>\n          <Paper className={classes.paper}>\n            <img\n              alt=\"结果图\"\n              className={classes.resultImg}\n              src={resultImgData}\n            ></img>\n          </Paper>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}